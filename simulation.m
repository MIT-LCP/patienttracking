function data=simulation(N,show)
%
% data=simulation(N,show)
%
% Simulates a non-linear problem (logistic regression with 3 families of
% curves). Feature space is 2 dimensional, with one feature more strongly
% correlated than the other. Feature also has noise added. N is an integer
% representing the number of samples with a one minute time step.
%
% data
%   Nx3 simulated data. First column is the simulated lactate value. Second
%   and third columns are pseudo-features generated by correlation and
%   noise. 
%

M=5; %How many curves (ie, how many different dynamics) to simulate

%Ideal curve models
K=[1 1 4 3 1];    % 1 Lactate at equilibrium
A=[0.0746 0.0746 0.04 0.108 0.1420];%Clearance rates
V=[0.01 0.01 0.01 0.01 0.01].*2/100; %state noise
B=[0 0.0005 0 0 0]; %Production rate
tm=[0:0.05:(N-1)*0.05];

lactate=zeros(N,M);

%Set Initial Conditions
lactate(1,:)=zeros(1,M)+8;

for m=1:M
    lactate(2:end,m)=LacateModel(lactate(1,m),tm(2:end),A(m),K(m),B(m),V(m));
end

%Simulate features by correlating or associating them with lactate values
noise_pow=[0.3 0.3];
feat1=(randn(N*M,1).*noise_pow(1)).^2;
feat2=(randn(N*M,1).*noise_pow(2)).^2;

feat1=sin(lactate(:).*0.25)+feat1;
feat2=lactate(:).*0.3+feat2;

data=[lactate(:) feat1 feat2];

%Plot for debugging
if(show)
    close all
    figure
    plot(tm,lactate)
    title('Simulated Lacate')
    xlabel('Time (hours)')
    ylabel('Lactate level')
    grid on;
    
    figure
    subplot(222)
    scatter(feat1,lactate(:))
    xlabel('feature 1')
    ylabel('Lactate')
    grid on;
    
    subplot(223)
    scatter(feat2,lactate(:))
    xlabel('feature 2')
    ylabel('Lactate')
    grid on;
    
    subplot(224)
    scatter(feat1,feat2)
    xlabel('feature 1')
    ylabel('feature 2')
    grid on;
    
%     figure
%     plot3(feat1,feat2,lactate(:),'-ro')
%     xlabel('feature 1')
%     ylabel('feature 2')
%     zlabel('lactate')
%     grid on;
end









