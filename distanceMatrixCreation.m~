function [dist] = computeKeogh(x, y)

for i = 1:length(feature_dist)
    varDist = feature_dist{i}

    % Reference Signal
    x1 = allSeg(j, :);    
    U = repmat(max(x1(l)), numPeaks, 1); L = repmat(min(x1(l)), numPeaks, 1);          
    dArr(j, :) = sum([(allSeg > U).* (allSeg - U) (allSeg < L).* (L - allSeg)]'.^2);

    LB_Keogh = sqrt(sum([(allSeg > U).* (allSeg - U) (allSeg < L).* (L - allSeg)]'.^2));

    for k = j+1:numPeaks                       

        % If there are no previous "real" DTW dist
        if any(LB_Keogh(k) > d(j+1:k-1))
            d(k) = min(d(LB_Keogh(k) > d(j+1:k-1)));
        else
            [d(k), ~] = dtw_mex(x1, allSeg(k, :), floor(lenPeaks*r));   
        end
    end
    dArr(j, :) = d;  
end